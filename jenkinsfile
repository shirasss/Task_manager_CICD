pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building'
                script {
                    cleanupContainers()
                    buildAndRunContainers()
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
        always {
            cleanupUnusedImages()
        }
    }

    // Helper functions
    def cleanupContainers() {
        echo 'Stopping and removing containers...'
        sh "docker-compose down"
        sleep time: 10, unit: 'SECONDS'
    }

    def buildAndRunContainers() {
        echo 'Building and running containers...'
        sh "docker-compose up --build -d"
    }

    def cleanupUnusedImages() {
        echo 'Cleaning up unused Docker images...'
        sh "docker system prune -af"
    }
}


// pipeline {
//     agent any
//     stages {
//         stage('Build') {
//             steps {
//                 echo 'Building'
//                 script {
//                     echo 'Stopping and removing containers and removing unused images...'
//                     sh "docker-compose down"
//                     sleep time: 10, unit: 'SECONDS'
//                     // sh 'docker rmi mongo:latest  || true'
//                     // sh 'docker rmi node_image:latest  || true'
//                     sh "docker-compose up --build -d"
//                 }
//             }
//         }
//     }
//     post {
//         success {
//             echo 'Pipeline succeeded!'
//         }
//         failure {
//             echo 'Pipeline failed!'
//         }
//         always {
//         sh "docker system prune -af"
//         }
//     }
// }
