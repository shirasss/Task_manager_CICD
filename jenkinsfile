pipeline {
    agent any
    environment {
        artifactRegistryImage = "me-west1-docker.pkg.dev/eco-tract-407114/shira-repo/chat_sql"
        acrName = "shirarepo"  // Replace with your ACR name
    }
    stages {
        stage('Build') {
            steps {
                echo 'Building'
                script {
                    echo 'Stopping and removing containers and removing unused images...'
                    // sh "docker-compose stop"
                    sh "docker-compose down"
                    sleep time: 10, unit: 'SECONDS'
                    // sh 'docker rmi mongo:latest  || true'
                    // sh 'docker rmi node_image:latest  || true'
                    sh "docker-compose up --build -d"
                }
            }
        }

        stage('Push to ACR') {
            steps {
                script {
                    // Extract the commit hash
                    def commitHash = sh(script: 'git rev-parse HEAD', returnStdout: true).trim()
                    // sh "az acr login --name shirarepo"
                    // Tag the Docker image
                    // sh "docker tag mongo:latest ${acrName}.azurecr.io/mongo:${commitHash}"
                    
                    // Push the Docker image to ACR
                    // sh "docker push ${acrName}.azurecr.io/mongo:${commitHash}"
                }
            }
        }
    }
    post {
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
        always {
        sh "docker system prune -af"
        }
    }
}
